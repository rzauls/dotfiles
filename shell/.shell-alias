# ls
alias ll='ls -lha'

# editor
alias vim='nvim'
alias neovide='/Applications/Neovide.app/Contents/MacOS/neovide'

# tmux
alias ta='tmux attach -t'
alias ta0='tmux attach -t 0'


# standalone neogit invocation with better startup time
neogit() {
    local temp_config=$(mktemp -d)
    
    # Create minimal init.lua
    mkdir -p "$temp_config/nvim"
    cat > "$temp_config/nvim/init.lua" << 'EOF'
-- Bootstrap lazy.nvim
local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not vim.loop.fs_stat(lazypath) then
  vim.fn.system({"git", "clone", "--filter=blob:none", "https://github.com/folke/lazy.nvim.git", "--branch=stable", lazypath})
end
vim.opt.rtp:prepend(lazypath)

-- Setup neogit
require("lazy").setup({
  {
    "NeogitOrg/neogit",
    dependencies = {"nvim-lua/plenary.nvim", "sindrets/diffview.nvim", "nvim-telescope/telescope.nvim"},
    config = function()
      require('neogit').setup({
        kind = "tab",
        mappings = {
          status = {
            ["q"] = function() vim.cmd("qa!") end,
          }
        }
      })
      vim.defer_fn(function() require('neogit').open() end, 100)
      
      vim.api.nvim_create_autocmd("BufEnter", {
        callback = function()
          if vim.bo.filetype:match("^Neogit") then
            vim.keymap.set("n", "q", "<cmd>qa!<CR>", { 
              buffer = true, 
              nowait = true, 
              noremap = true, 
              silent = true 
            })
          end
        end,
      })
    end
  }
})
EOF

    # Launch with temporary config directory
    XDG_CONFIG_HOME="$temp_config" nvim
    
    # Cleanup
    rm -rf "$temp_config"
}

alias lg='neogit'
